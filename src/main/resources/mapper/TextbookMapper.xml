<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chen.graduation.mapper.TextbookMapper">

    <resultMap id="BaseResultMap" type="com.chen.graduation.beans.PO.Textbook">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="bookName" column="book_name" jdbcType="VARCHAR"/>
            <result property="isbn" column="isbn" jdbcType="VARCHAR"/>
            <result property="barCode" column="bar_code" jdbcType="VARCHAR"/>
            <result property="author" column="author" jdbcType="VARCHAR"/>
            <result property="binding" column="binding" jdbcType="VARCHAR"/>
            <result property="print" column="print" jdbcType="VARCHAR"/>
            <result property="folio" column="folio" jdbcType="VARCHAR"/>
            <result property="price" column="price" jdbcType="VARCHAR"/>
            <result property="words" column="words" jdbcType="VARCHAR"/>
            <result property="publishingHouse" column="publishing_house" jdbcType="VARCHAR"/>
            <result property="pageNumber" column="page_number" jdbcType="OTHER"/>
            <result property="issueNumber" column="issue_number" jdbcType="VARCHAR"/>
            <result property="prePacketNumber" column="pre_packet_number" jdbcType="OTHER"/>
            <result property="publicationDate" column="publication_date" jdbcType="DATE"/>
            <result property="imgUrl" column="img_url" jdbcType="VARCHAR"/>
            <result property="description" column="description" jdbcType="VARCHAR"/>
            <result property="state" column="state" jdbcType="SMALLINT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
            <result property="isDeleted" column="is_deleted" jdbcType="BIGINT"/>
    </resultMap>
    <resultMap id="textBookWithFeedbackCount" type="com.chen.graduation.beans.PO.Textbook" extends="BaseResultMap">
        <result property="feedbackCount" column="feedbackCount"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,book_name,isbn,
        bar_code,author,binding,
        print,folio,price,
        words,publishing_house,page_number,
        issue_number,pre_packet_number,publication_date,
        img_url,description,state,
        create_time,update_time,is_deleted
    </sql>
    <select id="getByIds" resultMap="textBookWithFeedbackCount">
        select tb_textbook.*,count(ttf.id) as feedbackCount
        from tb_textbook left join tb_textbook_feedback ttf on tb_textbook.id = ttf.textbook_id
        where tb_textbook.is_deleted=0
        and (ttf.is_deleted = 0 or ttf.is_deleted is null )
        and tb_textbook.id in
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        group by tb_textbook.id
    </select>
    <select id="search" resultMap="textBookWithFeedbackCount">
        select tb.id, tb.book_name, tb.isbn, tb.bar_code, tb.author, tb.binding, tb.print, tb.folio, tb.price, tb.words,
        tb.publishing_house, tb.page_number, tb.issue_number, tb.pre_packet_number, tb.publication_date, tb.img_url,
        tb.description, tb.state, tb.create_time, tb.update_time, tb.is_deleted, tb.stock
        ,(select count(*) from tb_textbook_feedback tbf where tbf.textbook_id=tb.id and tbf.is_deleted=0) as
        feedbackCount
        from tb_textbook tb
        where tb.is_deleted=0
        <if test="dto.keyWord != null and dto.keyWord != ''">
            and (tb.book_name like concat('%',#{dto.keyWord},'%') or tb.description like concat('%',#{dto.keyWord},'%')
            or
            tb.author like concat('%',#{dto.keyWord},'%') or tb.publishing_house like concat('%',#{dto.keyWord},'%'))
        </if>
        <if test="dto.state != null">
            and tb.state=#{dto.state}
        </if>
        <if test="dto.beginTime != null and dto.beginTime != ''"><!-- 开始时间检索 -->
            AND tb.publication_date &gt;= #{dto.beginTime}::timestamp
        </if>
        <if test="dto.beginTime != null and dto.beginTime != ''"><!-- 结束时间检索 -->
            AND tb.publication_date &lt;= #{dto.endTime}::timestamp
        </if>
        order by
        <if test="dto.orderByStock !=null and dto.orderByStock ==  @com.chen.graduation.enums.SortableEnums@ASC">
            stock ,
        </if>
        <if test="dto.orderByStock !=null and dto.orderByStock == @com.chen.graduation.enums.SortableEnums@DESC">
            stock desc,
        </if>
        <if test="dto.orderByPrice !=null and dto.orderByPrice ==  @com.chen.graduation.enums.SortableEnums@ASC">
            price,
        </if>
        <if test="dto.orderByPrice !=null and dto.orderByPrice == @com.chen.graduation.enums.SortableEnums@DESC">
            price desc,
        </if>
        id
    </select>

</mapper>
